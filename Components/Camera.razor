@inject IJSRuntime JS

@code {
    private static uint IdCounter = 0;

    public uint Id = 0;

    [CascadingParameter]
    private Scene scene { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        if (scene is null)
        {
            throw new ArgumentNullException(nameof(scene), "camera must exist within a scene");
        }

        Id = Interlocked.Increment(ref IdCounter);
        await JS.InvokeVoidAsync("CreateCamera", Id);

        scene.SetCamera(this);
    }
}