@using System.Drawing
@using Microsoft.JSInterop

@namespace BlazorThreeJs.Components.Lights

@inject IJSRuntime JS

@code {
    public uint Id = 0;

    public IJSObjectReference ObjRef { get; private set; } = null!;

    [CascadingParameter]
    private Scene scene { get; set; } = null!;

    [CascadingParameter]
    private DirectionalLight light { get; set; } = null!;

    [Parameter]
    public float PlaneSize { get; set; } = 1;

    protected override void OnInitialized()
    {
        if (scene is null)
        {
            throw new ArgumentNullException(nameof(scene), "DirectionalLightHelper must exist within a scene");
        }

        if (light is null)
        {
            throw new ArgumentNullException(nameof(scene), "DirectionalLightHelper must exist within a light");
        }

        light.OnObjCreated += async (IJSObjectReference objRef) =>
        {
            ObjRef = await JS.InvokeAsync<IJSObjectReference>("CreateDirectionalLightHelper", objRef, PlaneSize);
            await scene.AddObject(ObjRef);
        };
    }
}